steps:
  # Step 1: Construir la imagen Docker usando el Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/nest-crud-jwt-swagger-gcp/crud-api-biblioteca-nest:latest', '.']

  # Step 2: Subir la imagen a Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/nest-crud-jwt-swagger-gcp/crud-api-biblioteca-nest:latest']

  # Step 3: Desplegar la imagen Docker en App Engine
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['app', 'deploy', '--image-url', 'gcr.io/nest-crud-jwt-swagger-gcp/crud-api-biblioteca-nest:latest', '--project', 'nest-crud-jwt-swagger-gcp', '--quiet']
    env:
    - 'GAE_ENV=flex'
    - 'GAE_RUNTIME=nodejs22'

  # Step 4: Esperar a que la aplicación esté lista
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args: ['-c', 'sleep 60']

  # Step 5: Ejecutar migraciones en la base de datos Cloud SQL
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'npm'
    args: ['run', 'migrate']
    env:
      - 'CLOUD_SQL_CONNECTION_NAME=nest-crud-jwt-swagger-gcp:us-central1:biblioteca-instancia'
      - 'DATABASE_PORT=3306'
      - 'DATABASE_USER=root'
      - 'DATABASE_PASSWORD=shida17'
      - 'DATABASE_NAME=biblioteca'

timeout: '1600s'
